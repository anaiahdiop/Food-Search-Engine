{"ast":null,"code":"var _jsxFileName = \"/Users/anaiahdiop/Desktop/FullStack/Homework3/src/components/searchPage/textbox/Text.js\";\nimport React, { Component } from 'react';\n\nclass Text extends Component {\n  constructor() {\n    super();\n    this.state = {\n      //an object with keyvalue pairs contains - all data that needs to be changed ober lifecyle of THIS component\n      inputValue: '',\n      //key value pair\n      nameSelected: true,\n      ingredientSelected: false\n    };\n    this._handleChange = this._handleChange.bind(this); //all callbacks are invoked function style, -> context will be global context so we need to make sure we bind the context to THIS specifcally \n\n    this._handleClick = this._handleChange.bind(this);\n  }\n\n  _handleChange(e) {\n    //react automatically passes event in e \n    this.setState( // bracket for \"defining function\" parentheses invoke something \n    {\n      inputValue: e.target.value\n    });\n  }\n\n  _handleClick() {\n    this.setState(() => {\n      return {\n        nameSelected: !this.state.nameSelected,\n        ingredientSelected: !this.state.ingredientSelected\n      };\n    });\n    debugger;\n  } //on click when one is true the other is false \n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.inputValue,\n      placeholder: \"Search For...\",\n      onChange: this._handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n/*<input type = \"radio\" value = {this.state.nameSelected} name=\"categories\" id=\"Name\" onClick = {this._handleClick}></input>\n                    <label htmlFor=\"Name\">Name</label>\n                <input type = \"radio\" value = {this.state.ingredientSelected} name=\"categories\" id=\"Ingredient\" onClick = {this._handleClick}></input>\n                    <label htmlFor=\"Ingredient\">Ingredient</label>\n*/\n\n\nexport default Text;","map":{"version":3,"sources":["/Users/anaiahdiop/Desktop/FullStack/Homework3/src/components/searchPage/textbox/Text.js"],"names":["React","Component","Text","constructor","state","inputValue","nameSelected","ingredientSelected","_handleChange","bind","_handleClick","e","setState","target","value","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA4B;AAExBE,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AAAI;AACbC,MAAAA,UAAU,EAAE,EADH;AACO;AAChBC,MAAAA,YAAY,EAAE,IAFL;AAGTC,MAAAA,kBAAkB,EAAE;AAHX,KAAb;AAKA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB,CAPS,CAO4C;;AACrD,SAAKC,YAAL,GAAoB,KAAKF,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAApB;AACH;;AAEDD,EAAAA,aAAa,CAACG,CAAD,EAAG;AAAE;AACd,SAAKC,QAAL,EAAe;AACZ;AAACP,MAAAA,UAAU,EAAEM,CAAC,CAACE,MAAF,CAASC;AAAtB,KADH;AAGH;;AAEDJ,EAAAA,YAAY,GAAE;AACV,SAAKE,QAAL,CAAc,MAAM;AAChB,aAAM;AACFN,QAAAA,YAAY,EAAE,CAAC,KAAKF,KAAL,CAAWE,YADxB;AAEFC,QAAAA,kBAAkB,EAAE,CAAC,KAAKH,KAAL,CAAWG;AAF9B,OAAN;AAIH,KALD;AAOA;AACH,GA5BuB,CA+BxB;;;AAEAQ,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,IAAI,EAAG,MAAd;AAAqB,MAAA,KAAK,EAAI,KAAKX,KAAL,CAAWC,UAAzC;AAAqD,MAAA,WAAW,EAAG,eAAnE;AAAmF,MAAA,QAAQ,EAAI,KAAKG,aAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAvCuB;AA0C5B;;;;;;;AAOA,eAAeN,IAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Text extends Component{\n    \n    constructor(){\n        super();\n        this.state = {   //an object with keyvalue pairs contains - all data that needs to be changed ober lifecyle of THIS component\n            inputValue: '', //key value pair\n            nameSelected: true,\n            ingredientSelected: false,\n        } \n        this._handleChange = this._handleChange.bind(this);  //all callbacks are invoked function style, -> context will be global context so we need to make sure we bind the context to THIS specifcally \n        this._handleClick = this._handleChange.bind(this);\n    }\n\n    _handleChange(e){ //react automatically passes event in e \n        this.setState( // bracket for \"defining function\" parentheses invoke something \n           {inputValue: e.target.value}\n        );\n    }\n\n    _handleClick(){\n        this.setState(() => {\n            return{\n                nameSelected: !this.state.nameSelected,\n                ingredientSelected: !this.state.ingredientSelected\n            }\n        }\n        );\n        debugger\n    }\n\n\n    //on click when one is true the other is false \n\n    render(){\n        return(\n            <div>\n                <input type = \"text\" value = {this.state.inputValue} placeholder = \"Search For...\" onChange = {this._handleChange}></input>\n            </div>\n        );\n    }\n}\n\n/*<input type = \"radio\" value = {this.state.nameSelected} name=\"categories\" id=\"Name\" onClick = {this._handleClick}></input>\n                    <label htmlFor=\"Name\">Name</label>\n                <input type = \"radio\" value = {this.state.ingredientSelected} name=\"categories\" id=\"Ingredient\" onClick = {this._handleClick}></input>\n                    <label htmlFor=\"Ingredient\">Ingredient</label>\n*/\n\n\nexport default Text;"]},"metadata":{},"sourceType":"module"}