{"ast":null,"code":"var _jsxFileName = \"/Users/anaiahdiop/Desktop/FullStack/Homework3/src/components/searchPage/Search.js\";\nimport React, { Component } from \"react\";\nimport recipeData from \"../../assests/data/recipe.json\";\nimport Recipe from \"../resultPage/Recipe.js\";\nconst recipesArr = recipeData.recipes;\nlet resultList = [];\n\nclass Search extends Component {\n  //constructor\n  constructor(props) {\n    super(props);\n    this.state = {\n      hidden: null,\n      visible: null,\n      searched: true,\n      /// needs to be true to work on first try??\n      data: [],\n      inputValue: null,\n      nameSelected: null,\n      ingredientSelected: null\n    };\n    this._handleSearchClick = this._handleSearchClick.bind(this);\n    this._handleNameClick = this._handleNameClick.bind(this);\n    this._handleIngredientClick = this._handleIngredientClick.bind(this);\n    this._handleChange = this._handleChange.bind(this); //all callbacks are invoked function style, -> context will be global context so we need to make sure we bind the context to THIS specifcally \n    //all event listeners should be binded in constructors\n    //if not binded the event wont be able to recongnize \"this\"\n  }\n\n  _handleAdvancedClick() {} // Methods\n\n\n  _handleSearchClick() {\n    this.setState(previousState => {\n      // this.setState: a method that takes a function\n      return {\n        searched: !previousState.searched\n      };\n    });\n    this.filterName();\n    this.filterIngredient(); // console.log(e) <- interesting\n\n    this.displayResults();\n  }\n\n  _handleNameClick() {\n    this.setState(() => {\n      return {\n        nameSelected: true,\n        ingredientSelected: false\n      };\n    });\n  }\n\n  _handleIngredientClick() {\n    this.setState(() => {\n      return {\n        ingredientSelected: true,\n        nameSelected: false\n      };\n    });\n  }\n\n  _handleChange(e) {\n    //react automatically passes event in e \n    this.setState( // bracket for \"defining function\" parentheses invoke something \n    {\n      inputValue: e.target.value\n    });\n  }\n\n  filterName() {\n    if (this.state.nameSelected && this.state.searched) {\n      recipesArr.forEach(r => {\n        if (r.title.toLowerCase().includes(this.state.inputValue.toLowerCase())) {\n          resultList.push(r);\n        }\n\n        return resultList;\n      });\n    }\n  }\n\n  filterIngredient() {\n    if (this.state.ingredientSelected && this.state.searched) {\n      recipesArr.forEach(r => {\n        r.ingredients.forEach(ingredient => {\n          if (ingredient.toLowerCase().includes(this.state.inputValue.toLowerCase())) {\n            resultList.push(r);\n          }\n\n          return resultList;\n        });\n      });\n    }\n  }\n\n  displayResults() {\n    const listDisplay = resultList.map(r => {\n      // for each product i want product component based on data\n      return /*#__PURE__*/React.createElement(Recipe, {\n        key: r.name,\n        productInfo: r,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }\n      });\n    });\n    this.setState(previousState => {\n      return {\n        data: listDisplay,\n        searched: !previousState.searched\n      };\n    });\n\n    if (resultList.length === 0) {\n      this.setState({\n        data: [\"No results search again\"]\n      });\n    }\n\n    resultList = [];\n  }\n\n  render() {\n    //displayes new html elements\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"searchCriteria\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.inputValue,\n      placeholder: \"Search For...\",\n      onChange: this._handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      value: this.state.nameSelected,\n      name: \"categories\",\n      id: \"Name\",\n      onClick: this._handleNameClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      value: this.state.ingredientSelected,\n      name: \"categories\",\n      id: \"Ingredient\",\n      onClick: this._handleIngredientClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Ingredient\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }, \"Ingredient\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this._handleSearchClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, \"Search!\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this._handleAdvancedClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, \"Advanced\"), this.state.data);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/anaiahdiop/Desktop/FullStack/Homework3/src/components/searchPage/Search.js"],"names":["React","Component","recipeData","Recipe","recipesArr","recipes","resultList","Search","constructor","props","state","hidden","visible","searched","data","inputValue","nameSelected","ingredientSelected","_handleSearchClick","bind","_handleNameClick","_handleIngredientClick","_handleChange","_handleAdvancedClick","setState","previousState","filterName","filterIngredient","displayResults","e","target","value","forEach","r","title","toLowerCase","includes","push","ingredients","ingredient","listDisplay","map","name","length","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport recipeData from \"../../assests/data/recipe.json\"\nimport Recipe from \"../resultPage/Recipe.js\"\n\n\nconst recipesArr = recipeData.recipes\nlet resultList = []\n\nclass Search extends Component{\n\n    //constructor\n    constructor(props){ \n        super(props);\n        this.state = {\n            hidden:null,\n            visible:null,\n            searched: true, /// needs to be true to work on first try??\n            data: [],\n            inputValue: null,\n            nameSelected: null,\n            ingredientSelected: null, \n        };\n        this._handleSearchClick = this._handleSearchClick.bind(this)\n\n        this._handleNameClick = this._handleNameClick.bind(this)\n        this._handleIngredientClick = this._handleIngredientClick.bind(this)\n        this._handleChange = this._handleChange.bind(this);  //all callbacks are invoked function style, -> context will be global context so we need to make sure we bind the context to THIS specifcally \n        //all event listeners should be binded in constructors\n        //if not binded the event wont be able to recongnize \"this\"\n    }\n\n    _handleAdvancedClick(){\n\n    }\n    // Methods\n    _handleSearchClick(){\n        this.setState((previousState) => {// this.setState: a method that takes a function\n            return{\n                searched: !previousState.searched\n            }\n        });\n        this.filterName()\n        this.filterIngredient() // console.log(e) <- interesting\n        this.displayResults()\n    }\n\n    _handleNameClick(){\n        this.setState(() => {\n            return{\n                nameSelected: true,\n                ingredientSelected: false,\n            }\n            \n        });\n    }\n\n    _handleIngredientClick(){\n        this.setState(() => {\n            return{\n                ingredientSelected: true,\n                nameSelected: false,\n            }    \n        });\n    }\n        \n\n    _handleChange(e){ //react automatically passes event in e \n        this.setState( // bracket for \"defining function\" parentheses invoke something \n           {inputValue: e.target.value}\n        );\n    }\n\n    filterName(){\n\n        if(this.state.nameSelected && this.state.searched){ \n            recipesArr.forEach(r =>{\n                if(r.title.toLowerCase().includes(this.state.inputValue.toLowerCase())){\n                    resultList.push(r);\n                }\n            return(resultList)\n            })\n        }\n    }\n\n    filterIngredient(){\n\n        if(this.state.ingredientSelected && this.state.searched){ \n            recipesArr.forEach(r =>{\n                r.ingredients.forEach( ingredient =>{\n                    if(ingredient.toLowerCase().includes(this.state.inputValue.toLowerCase())){\n                        resultList.push(r);\n                    }\n                return(resultList)\n                }\n                    \n                )\n            })\n        }\n    }\n\n    displayResults(){\n        const listDisplay = resultList.map(r =>{\n            // for each product i want product component based on data\n            return(\n              <Recipe key={r.name}productInfo={r}/>\n            );\n          }); \n          this.setState((previousState) =>{\n              return{\n                data:listDisplay,\n                searched: !previousState.searched\n              }\n            }\n          )\n        if(resultList.length === 0){\n            this.setState(\n                {data: [\"No results search again\"]}\n            )\n        }\n        resultList = []\n    }\n\n    render(){ //displayes new html elements\n        return(\n            <div className=\"searchCriteria\">\n\n                <input type = \"text\" value = {this.state.inputValue} placeholder = \"Search For...\" onChange = {this._handleChange}></input>\n                <input type = \"radio\" value = {this.state.nameSelected} name=\"categories\" id=\"Name\" onClick = {this._handleNameClick}></input>\n                    <label htmlFor=\"Name\">Name</label>\n                <input type = \"radio\" value = {this.state.ingredientSelected} name=\"categories\" id=\"Ingredient\" onClick = {this._handleIngredientClick}></input>\n                    <label htmlFor=\"Ingredient\">Ingredient</label>\n                <button onClick={this._handleSearchClick}>Search!</button>\n                <button onClick={this._handleAdvancedClick}>Advanced</button>\n                {this.state.data}\n            </div>\n\n        );\n    }\n\n}\n\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}