{"ast":null,"code":"var _jsxFileName = \"/Users/anaiahdiop/Desktop/FullStack/Homework3/src/components/searchPage/Search.js\";\nimport { set } from \"object-path\";\nimport React, { Component } from \"react\";\nimport Text from \"./textbox/Text.js\";\nimport recipeData from \"../../assests/data/recipe.json\";\n\nclass Search extends Component {\n  //constructor\n  constructor() {\n    super();\n    const recipes = recipeData.recipes;\n    this.state = {\n      searched: false,\n      data: recipes,\n      name: null,\n      ingredient: null\n    };\n    this._handleClick = this._handleClick.bind(this); //all event listeners should be binded in constructors\n    //if not binded the event wont be able to recongnize \"this\"\n  } // Methods\n\n\n  _handleClick() {\n    this.setState(previousState => {\n      // thi.setState: a method that takes a function\n      return {\n        searched: !previousState.searched\n      };\n    });\n  }\n\n  searchName() {\n    if (this.state.searched && this.state.name) {\n      this.setState({\n        name: true\n      });\n    }\n  }\n\n  filterName() {\n    if (this.state.name) {\n      const results = this.state.data;\n    }\n  }\n\n  render() {\n    //displayes new html elements\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"searchButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }), this.state.data, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this._handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, \"Search!\"));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/anaiahdiop/Desktop/FullStack/Homework3/src/components/searchPage/Search.js"],"names":["set","React","Component","Text","recipeData","Search","constructor","recipes","state","searched","data","name","ingredient","_handleClick","bind","setState","previousState","searchName","filterName","results","render"],"mappings":";AAAA,SAASA,GAAT,QAAoB,aAApB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;;AAEA,MAAMC,MAAN,SAAqBH,SAArB,CAA8B;AAE1B;AACAI,EAAAA,WAAW,GAAE;AACT;AACA,UAAMC,OAAO,GAAGH,UAAU,CAACG,OAA3B;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,KADD;AAETC,MAAAA,IAAI,EAAEH,OAFG;AAGTI,MAAAA,IAAI,EAAE,IAHG;AAITC,MAAAA,UAAU,EAAE;AAJH,KAAb;AAMA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB,CATS,CAUT;AACA;AACH,GAfyB,CAiB1B;;;AACAD,EAAAA,YAAY,GAAE;AACV,SAAKE,QAAL,CAAeC,aAAD,IAAmB;AAAC;AAC9B,aAAM;AACFP,QAAAA,QAAQ,EAAE,CAACO,aAAa,CAACP;AADvB,OAAN;AAGC,KAJL;AAMH;;AAEDQ,EAAAA,UAAU,GAAE;AACR,QAAG,KAAKT,KAAL,CAAWC,QAAX,IAAuB,KAAKD,KAAL,CAAWG,IAArC,EAA0C;AACtC,WAAKI,QAAL,CAAc;AAACJ,QAAAA,IAAI,EAAE;AAAP,OAAd;AAEH;AACJ;;AAEDO,EAAAA,UAAU,GAAE;AACR,QAAG,KAAKV,KAAL,CAAWG,IAAd,EAAmB;AACf,YAAMQ,OAAO,GAAG,KAAKX,KAAL,CAAWE,IAA3B;AACH;AACJ;;AAGDU,EAAAA,MAAM,GAAE;AAAE;AACN,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEK,KAAKZ,KAAL,CAAWE,IAFhB,eAGI;AAAQ,MAAA,OAAO,EAAE,KAAKG,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,CADJ;AASH;;AAnDyB;;AAuD9B,eAAeR,MAAf","sourcesContent":["import { set } from \"object-path\";\nimport React, {Component} from \"react\";\nimport Text from \"./textbox/Text.js\";\nimport recipeData from \"../../assests/data/recipe.json\"\n\nclass Search extends Component{\n\n    //constructor\n    constructor(){ \n        super();\n        const recipes = recipeData.recipes\n        this.state = {\n            searched: false,\n            data: recipes,\n            name: null,\n            ingredient: null,\n        };\n        this._handleClick = this._handleClick.bind(this)\n        //all event listeners should be binded in constructors\n        //if not binded the event wont be able to recongnize \"this\"\n    }\n\n    // Methods\n    _handleClick(){\n        this.setState((previousState) => {// thi.setState: a method that takes a function\n            return{\n                searched: !previousState.searched \n            }\n            }\n        );\n    }\n\n    searchName(){\n        if(this.state.searched && this.state.name){\n            this.setState({name: true})\n\n        }\n    }\n\n    filterName(){\n        if(this.state.name){\n            const results = this.state.data\n        }\n    }\n\n\n    render(){ //displayes new html elements\n        return(\n            <div className=\"searchButton\">\n                <Text/>\n                {this.state.data}\n                <button onClick={this._handleClick}>Search!</button>\n            </div>\n\n        );\n        \n    }\n}\n\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}