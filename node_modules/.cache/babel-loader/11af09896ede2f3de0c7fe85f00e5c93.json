{"ast":null,"code":"var _jsxFileName = \"/Users/anaiahdiop/Desktop/FullStack/Homework3/src/components/searchPage/Search.js\";\nimport React, { Component } from \"react\";\nimport Text from \"./textbox/Text.js\";\nimport recipeData from \"../../assests/data/recipe.json\";\nimport Recipe from \"../resultPage/Recipe.js\";\nlet results = recipeData.recipes;\n/*let resultComponent = results.map(result => {\n    return(\n        <Recipe key={result.name} productInfo={result}/>\n      );\n\n})*/\n\nclass Search extends Component {\n  //constructor\n  constructor(props) {\n    super(props);\n    this.state = {\n      searched: true,\n      /// ummm come back to this\n      data: null\n    };\n    this._handleClick = this._handleClick.bind(this); //all event listeners should be binded in constructors\n    //if not binded the event wont be able to recongnize \"this\"\n  } // Methods\n\n\n  _handleClick() {\n    this.setState(previousState => {\n      // thi.setState: a method that takes a function\n      return {\n        searched: !previousState.searched\n      };\n    } //this.displaySearch(),\n    );\n  }\n\n  filterName() {\n    if (this.state.nameSelected && this.state.searched) {\n      const results = this.state.data.filter(x => x.props.productInfo.title.toLowerCase().includes(this.state.inputValue)); //this.setState({data: results})\n\n      console.log(results);\n    }\n  }\n\n  displaySearch() {\n    if (this.state.searched) {//console.log(resultComponent[0].props.productInfo.title)\n    }\n  }\n\n  render() {\n    //displayes new html elements\n    const resultList = this.state.data;\n    console.log(this.state.nameSelected);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"searchButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      onChange: console.log(\"test\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this._handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, \"Search!\"));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/anaiahdiop/Desktop/FullStack/Homework3/src/components/searchPage/Search.js"],"names":["React","Component","Text","recipeData","Recipe","results","recipes","Search","constructor","props","state","searched","data","_handleClick","bind","setState","previousState","filterName","nameSelected","filter","x","productInfo","title","toLowerCase","includes","inputValue","console","log","displaySearch","render","resultList"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAGA,IAAIC,OAAO,GAAGF,UAAU,CAACG,OAAzB;AACA;;;;;;;AAOA,MAAMC,MAAN,SAAqBN,SAArB,CAA8B;AAE1B;AACAO,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,IADD;AACO;AAChBC,MAAAA,IAAI,EAAE;AAFG,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB,CANc,CAOd;AACA;AACH,GAZyB,CAc1B;;;AACAD,EAAAA,YAAY,GAAE;AACV,SAAKE,QAAL,CAAeC,aAAD,IAAmB;AAAC;AAC9B,aAAM;AACFL,QAAAA,QAAQ,EAAE,CAACK,aAAa,CAACL;AADvB,OAAN;AAGC,KAJL,CAKI;AALJ;AAOH;;AAEDM,EAAAA,UAAU,GAAE;AACR,QAAG,KAAKP,KAAL,CAAWQ,YAAX,IAA2B,KAAKR,KAAL,CAAWC,QAAzC,EAAkD;AAC9C,YAAMN,OAAO,GAAG,KAAKK,KAAL,CAAWE,IAAX,CAAgBO,MAAhB,CAAuBC,CAAC,IAAIA,CAAC,CAACX,KAAF,CAAQY,WAAR,CAAoBC,KAApB,CAA0BC,WAA1B,GAAwCC,QAAxC,CAAiD,KAAKd,KAAL,CAAWe,UAA5D,CAA5B,CAAhB,CAD8C,CAE9C;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYtB,OAAZ;AACH;AACJ;;AAEDuB,EAAAA,aAAa,GAAE;AACX,QAAG,KAAKlB,KAAL,CAAWC,QAAd,EAAuB,CAEnB;AACH;AACJ;;AAEDkB,EAAAA,MAAM,GAAE;AAAE;AACN,UAAMC,UAAU,GAAG,KAAKpB,KAAL,CAAWE,IAA9B;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWQ,YAAvB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAEQ,OAAO,CAACC,GAAR,CAAY,MAAZ,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAQ,MAAA,OAAO,EAAE,KAAKd,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,CADJ;AASH;;AApDyB;;AAyD9B,eAAeN,MAAf","sourcesContent":["import React, {Component} from \"react\";\nimport Text from \"./textbox/Text.js\";\nimport recipeData from \"../../assests/data/recipe.json\"\nimport Recipe from \"../resultPage/Recipe.js\"\n\n\nlet results = recipeData.recipes\n/*let resultComponent = results.map(result => {\n    return(\n        <Recipe key={result.name} productInfo={result}/>\n      );\n\n})*/\n\nclass Search extends Component{\n\n    //constructor\n    constructor(props){ \n        super(props);\n        this.state = {\n            searched: true, /// ummm come back to this\n            data: null,\n        };\n        this._handleClick = this._handleClick.bind(this)\n        //all event listeners should be binded in constructors\n        //if not binded the event wont be able to recongnize \"this\"\n    }\n\n    // Methods\n    _handleClick(){\n        this.setState((previousState) => {// thi.setState: a method that takes a function\n            return{\n                searched: !previousState.searched,\n            }\n            },\n            //this.displaySearch(),\n        );\n    }\n\n    filterName(){\n        if(this.state.nameSelected && this.state.searched){\n            const results = this.state.data.filter(x => x.props.productInfo.title.toLowerCase().includes(this.state.inputValue))\n            //this.setState({data: results})\n            console.log(results)\n        }\n    }\n\n    displaySearch(){\n        if(this.state.searched){\n\n            //console.log(resultComponent[0].props.productInfo.title)\n        }\n    }\n\n    render(){ //displayes new html elements\n        const resultList = this.state.data\n        console.log(this.state.nameSelected)\n        return(\n            <div className=\"searchButton\">\n                <Text onChange={console.log(\"test\")}/> \n                <button onClick={this._handleClick}>Search!</button>\n                \n                \n            </div>\n\n        );\n    }\n\n}\n\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}